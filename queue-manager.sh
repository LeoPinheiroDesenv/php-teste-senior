#!/bin/bash

# üöÄ Queue Manager - Script para gerenciar jobs do Laravel

case "$1" in
    "start")
        echo "üöÄ Iniciando worker de filas..."
        docker-compose exec -d app php artisan queue:work --sleep=3 --tries=3
        echo "‚úÖ Worker iniciado em background"
        ;;
    "stop")
        echo "üõë Parando workers..."
        docker-compose exec app pkill -f "queue:work"
        echo "‚úÖ Workers parados"
        ;;
    "restart")
        echo "üîÑ Reiniciando workers..."
        docker-compose exec app pkill -f "queue:work"
        sleep 2
        docker-compose exec -d app php artisan queue:work --sleep=3 --tries=3
        echo "‚úÖ Workers reiniciados"
        ;;
    "status")
        echo "üìä Status dos workers:"
        docker-compose exec app ps aux | grep "queue:work" || echo "‚ùå Nenhum worker ativo"
        ;;
    "monitor")
        echo "üëÄ Monitorando filas..."
        docker-compose exec app php artisan queue:monitor default
        ;;
    "failed")
        echo "‚ùå Jobs falhados:"
        docker-compose exec app php artisan queue:failed
        ;;
    "retry")
        echo "üîÑ Reprocessando jobs falhados..."
        docker-compose exec app php artisan queue:retry all
        echo "‚úÖ Jobs reprocessados"
        ;;
    "clear")
        echo "üßπ Limpando jobs falhados..."
        docker-compose exec app php artisan queue:flush
        echo "‚úÖ Jobs limpos"
        ;;
    "logs")
        echo "üìù Logs dos workers:"
        docker-compose exec app tail -f storage/logs/laravel.log | grep -E "(ProcessSale|queue|job)"
        ;;
    "test")
        echo "üß™ Testando job..."
        docker-compose exec app php artisan tinker --execute="
            \$sale = App\Models\Sale::first();
            if (\$sale) {
                App\Jobs\ProcessSale::dispatch(\$sale->id);
                echo 'Job ProcessSale disparado para venda ID: ' . \$sale->id;
            } else {
                echo 'Nenhuma venda encontrada para testar';
            }
        "
        ;;
    "info")
        echo "üìä Informa√ß√µes das filas:"
        echo "=========================="
        docker-compose exec app php artisan queue:monitor default
        echo ""
        echo "üìà Jobs falhados:"
        docker-compose exec app php artisan queue:failed
        echo ""
        echo "üîÑ Status dos workers:"
        docker-compose exec app ps aux | grep "queue:work" || echo "‚ùå Nenhum worker ativo"
        ;;
    *)
        echo "üöÄ Queue Manager - Gerenciador de Jobs Laravel"
        echo ""
        echo "Uso: $0 {comando}"
        echo ""
        echo "Comandos dispon√≠veis:"
        echo "  start     - Iniciar worker de filas"
        echo "  stop      - Parar workers"
        echo "  restart   - Reiniciar workers"
        echo "  status    - Ver status dos workers"
        echo "  monitor   - Monitorar filas"
        echo "  failed    - Ver jobs falhados"
        echo "  retry     - Reprocessar jobs falhados"
        echo "  clear     - Limpar jobs falhados"
        echo "  logs      - Ver logs dos workers"
        echo "  test      - Testar job ProcessSale"
        echo "  info      - Informa√ß√µes completas das filas"
        echo ""
        echo "Exemplos:"
        echo "  $0 start"
        echo "  $0 status"
        echo "  $0 monitor"
        ;;
esac
